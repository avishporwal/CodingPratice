

public class PriorityQueue  {
	
	class Node{
		String data;
		int priority;
		Node next;
	}
	
	
	public Node newNode(String d, int p) {
		Node temp = new Node();
		temp.data = d;
		temp.priority = p;
		temp.next = null;
		return temp;
		
	}
	
	public String peek(Node head) {
		return head.data;
	}
	
	public Node pop(Node head) {
		head = head.next;
		return head;
	}
	
	public Node push(Node head, String d, int p) {
		Node start = head;		
		Node temp = newNode(d,p);		
		if(start.priority < p) {			
			temp.next = head;
			head = temp;
		}
		else {			
			while( start.next!=null && start.next.priority >= p) {				
				start = start.next;				
			}			
			temp.next = start.next;
			start.next = temp;	
		}	
		return head;
	}
	
	public int isEmpty(Node head) {
		return head == null ? 1:0;
	}

	public static void main(String[] args) {
		
		PriorityQueue prioQueue = new PriorityQueue();
		
		Node priorityQueue = prioQueue.newNode("love",5);   
		priorityQueue = prioQueue.push(priorityQueue,"!",0);
		priorityQueue = prioQueue.push(priorityQueue,"my",1);
		priorityQueue = prioQueue.push(priorityQueue,"I",8);
		priorityQueue = prioQueue.push(priorityQueue,"country",1);
		
		while(prioQueue.isEmpty(priorityQueue)==0) {
			System.out.println(prioQueue.peek(priorityQueue));
			priorityQueue = prioQueue.pop(priorityQueue);
		}
		

	}

}
